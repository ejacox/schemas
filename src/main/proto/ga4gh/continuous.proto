syntax = "proto3";

package ga4gh;

import "ga4gh/common.proto";
import "ga4gh/metadata.proto";
import "google/protobuf/struct.proto";


// This protocol defines a format for exchanging continous valued signal data,
// such as those produced experimentally (e.g. ChIP-Seq data) or through 
// calculations (e.g. conservation scores). It can be used, for example,
// to share data stored in Wiggle, BigWig, and BedGraph formats.
//
// Only bases with a signal are represented. Gaps in the values indicate bases
// with no signal.
//
// Step and span from the wiggle format are used for a simple compression.


// A chunk of continuous data. Due to gaps in the signal, the values
// cannot be represented by a single array, but require a set of arrays.
message Continuous {
  // The start position at which this signal occurs (0-based). This
  // corresponds to the first base of the string of reference bases. Genomic
  // positions are non-negative integers less than reference length.
  int64 start = 1;

  // The reference on which this feature occurs (e.g. `chr20` or `X`).
  string reference_name = 2;
 
  // If not one, values are defined for every 'step' base, leaving
  // gaps of undefined regions.
  int32 step = 3;

  // The number of bases each value spans. For example if span is 5,
  // then the first value is defined over start plus the next 4 bases, the
  // second value over the following 5 bases, ...
  int32 span = 4;

  // The data values.
  repeated double values = 5;
}

// A set of continuous data.
message ContinuousSet {
  // The ID of this continuous data set.
  string id = 1;

  // The ID of the dataset this set belongs to.
  string dataset_id = 2;

  // The ID of the reference set which defines the coordinate-space for this
  // set of data.
  string reference_set_id = 3;

  // The display name for this dataset.
  string name = 4;

  // The source URI describing the file from which this set was
  // generated, if any.
  string source_uri = 5;

  // Remaining structured metadata key-value pairs.
  map<string, google.protobuf.ListValue> info = 6;
}
